<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event</title>
    <script src="https://cdn.tailwindcss.com"></script> <!-- Tailwind CSS CDN -->
</head>
<body class="bg-gray-100 text-gray-900">

    <div class="container mx-auto p-8">
        <!-- Header -->
        <h1 class="text-3xl font-bold text-center mb-6">Event</h1>

        <!-- Event Form -->
        <div class="bg-white shadow-md rounded-lg p-6 mb-8">
            <h2 class="text-xl font-semibold mb-4">Create a Event</h2>
            <form id="eventForm" class="space-y-4">
                <div>
                    <label class="block text-gray-700 font-medium">Title</label>
                    <input type="text" id="title" name="title" required class="w-full px-4 py-2 border rounded-md focus:ring focus:ring-blue-300">
                </div>
                <div>
                    <label class="block text-gray-700 font-medium">Details</label>
                    <input type="text" id="details" name="details" required class="w-full px-4 py-2 border rounded-md focus:ring focus:ring-blue-300">
                </div>
                <div>
                    <label class="block text-gray-700 font-medium">status</label>
                    <select type="text" id="status" name="status" required class="w-full px-4 py-2 border rounded-md focus:ring focus:ring-blue-300">
                        <option value="upcoming">upcoming</option>
                        <option value="ongoing">ongoing</option>
                        <option value="completed">completed</option>

                    </select>
                </div>
                <div>
                    <label class="block text-gray-700 font-medium">Upload File</label>
                    <input type="file" id="file" name="file" required class="w-full px-4 py-2 border rounded-md">
                </div>
                <button type="submit" class="bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition">
                    Create Event
                </button>
            </form>
        </div>


        <!-- Events List -->
        <div class="bg-white shadow-md rounded-lg p-6">
            <h2 class="text-xl font-semibold mb-4">Latest Events</h2>
            <ul class="divide-y divide-gray-300">
                <% if (events.length > 0) { %>
                    <% events.forEach(event => { %>
                        <li class="py-4 flex items-center justify-between">
                            <div>
                                <h3 class="text-lg font-semibold"><%= event.title %></h3>
                                <p class="text-sm text-gray-500">Uploaded on: <%= new Date(event.date).toLocaleDateString() %></p>
                                <p class="text-sm text-gray-900">Details: <%= event.details %></p>
                                <p class="text-sm text-gray-900">Status: <%= event.status %></p>
                                <a href="<%= event.file %>" class="text-blue-600 underline" download>Download File</a>
                            </div>
                            <div class="space-x-2">
                                
                                <button onclick="deleteEvent('<%= event._id %>')" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition">Delete</button>
                            </div>
                        </li>
                    <% }); %>
                <% } else { %>
                    <p class="text-gray-500">No Events available.</p>
                <% } %>
            </ul>
        </div>
    </div>

</body>
<script>
    async function deleteEvent(eventId) {
        if (confirm("Are you sure you want to delete this Event ?")) {
            try {
                const response = await fetch(`/events/delete/${eventId}`, {
                    method: "DELETE",
                });

                console.log(response)

                if (response.ok) {
                    
                    window.location.reload();

                    
                    alert("Event deleted successfully!");
                    
                } else {
                    alert("Failed to delete event!");
                }
            } catch (error) {
                console.error("Error:", error);
                alert("Error deleting event.");
            }
        }
    }

    document.getElementById('eventForm').addEventListener('submit', async function(event) {
    event.preventDefault(); // Prevent page refresh

    const formData = new FormData();
    formData.append('title', document.getElementById('title').value);
    formData.append('details', document.getElementById('details').value);
    formData.append('status', document.getElementById('status').value);
    formData.append('file', document.getElementById('file').files[0]); // File input

    console.log(formData);
    try {
        const response = await fetch('/events/create', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();
        if (response.ok) {
            window.location.reload();
            alert('Event Created Successfully!');
            document.getElementById('eventForm').reset(); // Clear the form
        } else {
            alert('Error: ' + data.message);
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Failed to create event.');
    }
});


</script>

</html>
